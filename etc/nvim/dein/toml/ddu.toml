[[plugins]]
repo = 'Shougo/ddu.vim'
on_event = 'BufEnter'
hook_source = '''
call ddu#custom#patch_global({
  \ 'ui': 'ff',
  \ 'uiParams': {
    \ 'ff': {
      \ 'autoAction': {
        \ 'name': 'preview',
        \ 'params': {},
      \ },
      \ 'startFilter': v:false,
      \ 'split': 'floating',
      \ 'floatingBorder': 'double',
      \ 'filterFloatingPosition': 'bottom',
      \ 'winHeight': 8,
      \ 'winRow': &lines - 8 - 2 - 2 - 2,
      \ 'winWidth': (20 - 2) * &columns / 20,
      \ 'winCol': &columns / 20,
      \ 'previewFloating': v:true,
      \ 'previewFloatingBorder': 'rounded',
      \ 'previewHeight': -2 + (&lines) - 14 - 2,
      \ 'previewWidth': (20 - 2) * &columns / 20,
      \ 'previewRow': -1,
      \ 'previewCol': &columns / 20,
      \ 'prompt': "> ",
    \ },
  \ },
\ })

call ddu#custom#patch_global({
  \ 'sourceParams': {
    \ 'file_rec': {
      \ 'ignoredDirectories': [
        \ '.git',
        \ '.venv',
        \ '.mypy_cache',
        \ '.pytest_cache',
        \ '__pycache__',
        \ '**/_global/*',
      \ ],
    \'args': []
    \ },
  \ },
\ })

call ddu#custom#patch_global({
  \ 'sourceOptions': {
    \  '_': {
      \ 'ignoreCase': v:true,
      \ 'matchers': ['matcher_substring'],
    \ },
  \ },
\ })

call ddu#custom#patch_global({
  \ 'kindOptions': {
    \ 'file': {
      \ 'defaultAction': 'open',
    \ },
  \ },
\ })

" directories source
call ddu#custom#alias('source', 'file_fd', 'file_external')
call ddu#custom#patch_global('sourceParams', {
  \ 'file_fd': {
    \ 'cmd': [
      \ 'fd', '--hidden',
      \ '-E', '.git',
      \ '-E', '.venv',
      \ '-E', '.mypy_cache',
      \ '-E', '.vscode',
    \ ],
  \ },
\ })

autocmd FileType ddu-ff call s:ddu_ff_my_settings()
  function! s:ddu_ff_my_settings() abort
    nnoremap <buffer> <CR> <Cmd>call ddu#ui#ff#do_action('itemAction')<CR>
    nnoremap <buffer> <Space> <Cmd>call ddu#ui#ff#do_action('toggleSelectItem')<CR>
    nnoremap <buffer> i <Cmd>call ddu#ui#ff#do_action('openFilterWindow')<CR>
    nnoremap <buffer> q <Cmd>call ddu#ui#ff#do_action('quit')<CR>
    nnoremap <buffer> <C-c> <Cmd>call ddu#ui#ff#do_action('quit')<CR>
    nnoremap <buffer> , <Cmd>call ddu#ui#ff#do_action('quit')<CR>
  endfunction

autocmd FileType ddu-ff-filter call s:ddu_filter_my_settings()
  function! s:ddu_filter_my_settings() abort
    inoremap <buffer> <CR> <Esc><Cmd>call ddu#ui#ff#close()<CR><Cmd>call ddu#ui#ff#do_action('preview')<CR>
    inoremap <buffer> <C-c> <Esc><Cmd>call ddu#ui#ff#close()<CR><Cmd>call ddu#ui#ff#do_action('quit')<CR>
    nnoremap <buffer> , <Cmd>call ddu#ui#ff#close()<CR>
  endfunction

autocmd FileType ddu-ff nnoremap <buffer> sn <Nop> 
autocmd FileType ddu-ff nnoremap <buffer> sp <Nop> 
autocmd FileType ddu-ff-filter nnoremap <buffer> sn <Nop> 
autocmd FileType ddu-ff-filter nnoremap <buffer> sp <Nop> 

" Mappings
nnoremap <Space>d <Cmd>Ddu file_rec -source-option-path=`expand('~/.config/nvim/dein')`<CR>
nnoremap ;g <Cmd>Ddu rg -resume=v:false -ui-param-ignoreEmpty -source-param-input=`input('Pattern: ')`<CR>
nnoremap <Space>p <Cmd>Ddu file_fd<CR>
nnoremap <Space>b <Cmd>Ddu buffer<CR>
'''

[[plugins]]
repo = 'Shougo/ddu-commands.vim'
depends = 'ddu.vim'
on_cmd = 'Ddu'

[[plugins]]
repo = 'Shougo/ddu-ui-ff'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-ui-filer'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-file'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-file_rec'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-filter-matcher_substring'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-kind-file'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-column-filename'
on_source = 'ddu.vim'

[[plugins]]
repo = 'shun/ddu-source-rg'
on_source = 'ddu.vim'

[[plugins]]
repo = 'matsui54/ddu-source-file_external'
on_source = 'ddu.vim'

[[plugins]]
repo = 'shun/ddu-source-buffer'
on_source = 'ddu.vim'

